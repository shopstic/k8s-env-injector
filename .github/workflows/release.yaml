name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true

defaults:
  run:
    shell: bash

jobs:
  release-image:
    name: Release image ${{ matrix.imageName }} ${{ github.event.inputs.version }}
    runs-on: [self-hosted, nix, general, arm64-linux, small]
    env:
      IMAGE_REPOSITORY: public.ecr.aws/shopstic   
    strategy:
      matrix:
        image: [app, init]
        include:
          - image: app
            imageName: k8s-env-injector
          - image: init
            imageName: k8s-env-injector-init              
    steps:
      - uses: actions/checkout@v3

      - name: Login to Amazon ECR
        uses: ./.github/actions/login-to-public-ecr
        with:
          imageRepo: ${{ env.IMAGE_REPOSITORY }}

      - name: Push image manifest
        shell: nix develop -v -c bash {0}
        env:
          RELEASE_VERSION: ${{ github.event.inputs.version }}
          IMAGE_NAME: ${{ matrix.imageName }}
        run: |-
          GITHUB_SHA=$(git rev-parse HEAD)
          manifest-tool push from-args \
            --platforms linux/amd64,linux/arm64 \
            --template "${IMAGE_REPOSITORY}"/"${IMAGE_NAME}":dev-ARCH-"${GITHUB_SHA}" \
            --target "${IMAGE_REPOSITORY}"/"${IMAGE_NAME}":"${RELEASE_VERSION}"

  release-helm-chart:
    name: Release Helm chart ${{ github.event.inputs.version }}
    runs-on: [self-hosted, nix, general, arm64-linux, small]
    env:
      IMAGE_REPOSITORY: public.ecr.aws/shopstic   
    steps:
      - uses: actions/checkout@v3

      - name: Login to Amazon ECR
        uses: ./.github/actions/login-to-public-ecr
        with:
          imageRepo: ${{ env.IMAGE_REPOSITORY }}

      - name: Build and push Helm Chart
        shell: nix develop -v -c bash {0}
        env:
          RELEASE_VERSION: ${{ github.event.inputs.version }}
        run: |-
          ./cli.sh push_helm_chart "${RELEASE_VERSION}" "${RELEASE_VERSION}" "oci://${IMAGE_REPOSITORY}/charts"

  create-git-tag:
    name: Create git tag ${{ github.event.inputs.version }}
    runs-on: [self-hosted, nix, general, arm64-linux, small]
    needs: [release-image, release-helm-chart]
    steps:
      - uses: actions/checkout@v3

      - name: Create git tag
        env:
          RELEASE_VERSION: ${{ github.event.inputs.version }}
        run: |-
          git config --global user.email "ci-runner@shopstic.com"
          git config --global user.name "CI Runner"
          git tag "${RELEASE_VERSION}"
          git push origin --tags